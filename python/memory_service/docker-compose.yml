# Core Nexus Memory Service Production Stack
# Includes PostgreSQL with pgvector for complete deployment

version: '3.8'

services:
  # PostgreSQL with pgvector extension
  postgres:
    image: pgvector/pgvector:pg16
    container_name: core-nexus-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-core_nexus}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_change_me}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - core-nexus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Core Nexus Memory Service
  memory-service:
    build: .
    container_name: core-nexus-memory
    environment:
      # Database configuration
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB:-core_nexus}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_change_me}
      
      # Vector provider configuration
      PINECONE_API_KEY: ${PINECONE_API_KEY:-}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      
      # Service configuration
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      WORKERS: ${WORKERS:-4}
      
      # Paths
      CHROMA_DB_PATH: /app/chroma_db
      
    volumes:
      - chroma_data:/app/chroma_db
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    networks:
      - core-nexus-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Redis for caching (optional but recommended for production)
  redis:
    image: redis:7-alpine
    container_name: core-nexus-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password_change_me}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - core-nexus-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Nginx reverse proxy (production)
  nginx:
    image: nginx:alpine
    container_name: core-nexus-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - core-nexus-network
    depends_on:
      - memory-service
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  chroma_data:
    driver: local
  redis_data:
    driver: local

networks:
  core-nexus-network:
    driver: bridge